/*
 * generated by Xtext
 */
package edu.udea.vulnfinder.gram.serializer;

import com.google.inject.Inject;
import edu.udea.vulnfinder.gram.services.SecLanguageGrammarAccess;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.GroupAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;

@SuppressWarnings("all")
public abstract class AbstractSecLanguageSyntacticSequencer extends AbstractSyntacticSequencer {

	protected SecLanguageGrammarAccess grammarAccess;
	protected AbstractElementAlias match_Input___LeftSquareBracketKeyword_2_2_0_RightSquareBracketKeyword_2_2_2__q;
	protected AbstractElementAlias match_WebComponent___LeftCurlyBracketKeyword_2_2_0_TargetKeyword_2_2_1_LeftSquareBracketKeyword_2_2_2_EStringParserRuleCall_2_2_3_a_RightSquareBracketKeyword_2_2_4_RightCurlyBracketKeyword_2_2_5__q;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (SecLanguageGrammarAccess) access;
		match_Input___LeftSquareBracketKeyword_2_2_0_RightSquareBracketKeyword_2_2_2__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getInputAccess().getLeftSquareBracketKeyword_2_2_0()), new TokenAlias(false, false, grammarAccess.getInputAccess().getRightSquareBracketKeyword_2_2_2()));
		match_WebComponent___LeftCurlyBracketKeyword_2_2_0_TargetKeyword_2_2_1_LeftSquareBracketKeyword_2_2_2_EStringParserRuleCall_2_2_3_a_RightSquareBracketKeyword_2_2_4_RightCurlyBracketKeyword_2_2_5__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getWebComponentAccess().getLeftCurlyBracketKeyword_2_2_0()), new TokenAlias(false, false, grammarAccess.getWebComponentAccess().getTargetKeyword_2_2_1()), new TokenAlias(false, false, grammarAccess.getWebComponentAccess().getLeftSquareBracketKeyword_2_2_2()), new TokenAlias(true, true, grammarAccess.getWebComponentAccess().getEStringParserRuleCall_2_2_3()), new TokenAlias(false, false, grammarAccess.getWebComponentAccess().getRightSquareBracketKeyword_2_2_4()), new TokenAlias(false, false, grammarAccess.getWebComponentAccess().getRightCurlyBracketKeyword_2_2_5()));
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (ruleCall.getRule() == grammarAccess.getEStringRule())
			return getEStringToken(semanticObject, ruleCall, node);
		return "";
	}
	
	/**
	 * EString returns ecore::EString:
	 * 	STRING | ID;
	 */
	protected String getEStringToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "\"\"";
	}
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_Input___LeftSquareBracketKeyword_2_2_0_RightSquareBracketKeyword_2_2_2__q.equals(syntax))
				emit_Input___LeftSquareBracketKeyword_2_2_0_RightSquareBracketKeyword_2_2_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_WebComponent___LeftCurlyBracketKeyword_2_2_0_TargetKeyword_2_2_1_LeftSquareBracketKeyword_2_2_2_EStringParserRuleCall_2_2_3_a_RightSquareBracketKeyword_2_2_4_RightCurlyBracketKeyword_2_2_5__q.equals(syntax))
				emit_WebComponent___LeftCurlyBracketKeyword_2_2_0_TargetKeyword_2_2_1_LeftSquareBracketKeyword_2_2_2_EStringParserRuleCall_2_2_3_a_RightSquareBracketKeyword_2_2_4_RightCurlyBracketKeyword_2_2_5__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * Ambiguous syntax:
	 *     ('[' ']')?
	 *
	 * This ambiguous syntax occurs at:
	 *     name=EString (ambiguity) ')' (rule end)
	 */
	protected void emit_Input___LeftSquareBracketKeyword_2_2_0_RightSquareBracketKeyword_2_2_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (
	  *         '{' 
	  *         ':target' 
	  *         '[' 
	  *         EString* 
	  *         ']' 
	  *         '}'
	  *     )?
	 *
	 * This ambiguous syntax occurs at:
	 *     path=EString (ambiguity) ')' (rule end)
	 *     path=EString (ambiguity) inputs+=Input
	 */
	protected void emit_WebComponent___LeftCurlyBracketKeyword_2_2_0_TargetKeyword_2_2_1_LeftSquareBracketKeyword_2_2_2_EStringParserRuleCall_2_2_3_a_RightSquareBracketKeyword_2_2_4_RightCurlyBracketKeyword_2_2_5__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
